# https://cloud.tencent.com/developer/article/1949574
# 此工作流的名字
name: Build 
# 工作流的执行时机，可以设定为定时执行，每次push后执行，手动执行等
on:
  # workflow_dispatch为在Github仓库的Actions面板中手动执行
  workflow_dispatch:
# 工作/任务，这里的工作是可以并行的。
jobs:
  # 工作的名称“编译windows版”
  buildwin:
    # 运行的操作系统 windows server 2022
    runs-on: windows-2022
    # 步骤
    steps:
    # 使用预制action：拉取最新的代码
    - uses: actions/checkout@v3
      with:
          ref: feat
    - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.5.0
    # https://pnpm.io/zh/continuous-integration/#github-actions
    - uses: pnpm/action-setup@v2.2.2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7.1.0
          run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install
    # 步骤一的名称：
    - name: Build
      # 该步骤运行的终端命令，运行编译命令
      run: npm run build
    # 步骤二的名称：将编译后的结果上传
    - name: Upload File
      # 使用预制action：上传文件，可以将执行路径打包成zip上传
      uses: actions/upload-artifact@v3
      with:
        # 上传后文件的名称
        name: windows
        # 打包的路径以及文件过滤，此为仅打包dist目录下的exe文件
        path: out/*exe